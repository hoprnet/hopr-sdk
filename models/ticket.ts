/* tslint:disable */
/* eslint-disable */
/**
 * HOPRd Rest API v2
 * This Rest API enables developers to interact with a hoprd node programatically.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: tech@hoprnet.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { HoprAddress } from './hopr-address';
import { Signature } from './signature';
/**
 * 
 * @export
 * @interface Ticket
 */
export interface Ticket {
    /**
     * 
     * @type {HoprAddress}
     * @memberof Ticket
     */
    counterparty?: HoprAddress;
    /**
     * The ticket's challenge which needs to be solved before being able to claim the embedded incentive.
     * @type {string}
     * @memberof Ticket
     */
    challenge?: string;
    /**
     * Ticket redemption relies on providing the value opening to a series of commitments that have previously been stored on-chain by the ticket recipient.
     * @type {string}
     * @memberof Ticket
     */
    epoch?: string;
    /**
     * Each ticket is labeled by an ongoing serial number named ticket index i and its current value is stored in the smart contract.
     * @type {string}
     * @memberof Ticket
     */
    index?: string;
    /**
     * The ticket's value in HOPR.
     * @type {string}
     * @memberof Ticket
     */
    amount?: string;
    /**
     * The ticket's winning probability normalized with the common base of Ethereum which is 2^256-1.
     * @type {string}
     * @memberof Ticket
     */
    winProb?: string;
    /**
     * Payment channels might run through multiple open and close sequences, this epoch tracks the sequence.
     * @type {string}
     * @memberof Ticket
     */
    channelEpoch?: string;
    /**
     * 
     * @type {Signature}
     * @memberof Ticket
     */
    signature?: Signature;
}
